{
  "uuid": "b665fd9b-bad0-4b5f-8f2b-0cf79dccf20d-tr-0-2550",
  "historyId": "OdinUiTests.Tests.Activity.TestActivityStatusWithTwoOrMoreAttemptsTests.Страница индивидуальной контрольной: статус отображается, если есть хотя бы одна завершенная попытка",
  "fullName": "OdinUiTests.Tests.Activity.TestActivityStatusWithTwoOrMoreAttemptsTests.Страница индивидуальной контрольной: статус отображается, если есть хотя бы одна завершенная попытка",
  "labels": [
    {
      "name": "thread",
      "value": "ParallelWorker#3"
    },
    {
      "name": "host",
      "value": "eeb97404b430"
    },
    {
      "name": "package",
      "value": "OdinUiTests.Tests.Activity"
    },
    {
      "name": "testMethod",
      "value": "StatusExistIfAtLeastOneCompletedAttempt"
    },
    {
      "name": "testClass",
      "value": "TestActivityStatusWithTwoOrMoreAttemptsTests"
    },
    {
      "name": "tag",
      "value": "Активность"
    },
    {
      "name": "tag",
      "value": "Дежурство"
    },
    {
      "name": "tag",
      "value": "Регресс"
    },
    {
      "name": "parentSuite",
      "value": "Активность"
    },
    {
      "name": "suite",
      "value": "Контрольная"
    },
    {
      "name": "subSuite",
      "value": "Прохождение теста"
    },
    {
      "name": "severity",
      "value": "critical"
    }
  ],
  "links": [],
  "name": "Страница индивидуальной контрольной: статус отображается, если есть хотя бы одна завершенная попытка",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "System.AggregateException : One or more errors occurred. (Request timed out)\n  ----> System.TimeoutException : Request timed out\n  ----> System.Threading.Tasks.TaskCanceledException : The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.\n  ----> System.TimeoutException : A task was canceled.\n  ----> System.Threading.Tasks.TaskCanceledException : A task was canceled.",
    "trace": "   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\n   at System.Threading.Tasks.Task`1.get_Result()\n   at OdinUiTests.Services.ExamineeService.FinishAttempt(UsersEnum user, String resultId) in /azp/_work/1/s/Services/ExamineeService.cs:line 107\n   at OdinUiTests.Services.ExamineeService.CheckTestHasOneAttempt(String actId, UsersEnum user) in /azp/_work/1/s/Services/ExamineeService.cs:line 83\n   at OdinUiTests.Tests.Activity.TestActivityStatusWithTwoOrMoreAttemptsTests.StatusExistIfAtLeastOneCompletedAttempt(String actId) in /azp/_work/1/s/Tests/Activity/TestActivityTests.cs:line 650\n--TimeoutException\n   at RestSharp.ResponseThrowExtension.ThrowIfError(RestResponse response)\n   at RestSharp.RestClientExtensions.PostAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken)\n--TaskCanceledException\n   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at RestSharp.RestClient.ExecuteRequestAsync(RestRequest request, CancellationToken cancellationToken)\n--TimeoutException\n\n--TaskCanceledException\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)"
  },
  "stage": "finished",
  "steps": [
    {
      "name": "Страница индивидуальной контрольной: статус отображается, если есть хотя бы одна завершенная попытка",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false,
        "message": "System.AggregateException : One or more errors occurred. (Request timed out)\n  ----> System.TimeoutException : Request timed out\n  ----> System.Threading.Tasks.TaskCanceledException : The request was canceled due to the configured HttpClient.Timeout of 100 seconds elapsing.\n  ----> System.TimeoutException : A task was canceled.\n  ----> System.Threading.Tasks.TaskCanceledException : A task was canceled.",
        "trace": "   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\n   at System.Threading.Tasks.Task`1.get_Result()\n   at OdinUiTests.Services.ExamineeService.FinishAttempt(UsersEnum user, String resultId) in /azp/_work/1/s/Services/ExamineeService.cs:line 107\n   at OdinUiTests.Services.ExamineeService.CheckTestHasOneAttempt(String actId, UsersEnum user) in /azp/_work/1/s/Services/ExamineeService.cs:line 83\n   at OdinUiTests.Tests.Activity.TestActivityStatusWithTwoOrMoreAttemptsTests.StatusExistIfAtLeastOneCompletedAttempt(String actId) in /azp/_work/1/s/Tests/Activity/TestActivityTests.cs:line 650\n--TimeoutException\n   at RestSharp.ResponseThrowExtension.ThrowIfError(RestResponse response)\n   at RestSharp.RestClientExtensions.PostAsync(IRestClient client, RestRequest request, CancellationToken cancellationToken)\n--TaskCanceledException\n   at System.Net.Http.HttpClient.HandleFailure(Exception e, Boolean telemetryStarted, HttpResponseMessage response, CancellationTokenSource cts, CancellationToken cancellationToken, CancellationTokenSource pendingRequestsCts)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)\n   at RestSharp.RestClient.ExecuteRequestAsync(RestRequest request, CancellationToken cancellationToken)\n--TimeoutException\n\n--TaskCanceledException\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.DecompressionHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpClient.<SendAsync>g__Core|83_0(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationTokenSource cts, Boolean disposeCts, CancellationTokenSource pendingRequestsCts, CancellationToken originalCancellationToken)"
      },
      "stage": "finished",
      "steps": [],
      "attachments": [
        {
          "name": "StatusExistIfAtLeastOneCompletedAttempt.jpg",
          "source": "eb0c3c71371d464d8e23a9a493092212-attachment.jpg",
          "type": "image/jpeg"
        },
        {
          "name": "Console Output",
          "source": "9852dbfeae874ebab3e8adf36b302205-attachment.txt",
          "type": "text/plain"
        }
      ],
      "parameters": [],
      "start": 1695626942477,
      "stop": 1695627043382
    }
  ],
  "attachments": [],
  "parameters": [
    {
      "name": "Param #0",
      "value": "5209"
    }
  ],
  "start": 1695626942477,
  "stop": 1695627043382
}